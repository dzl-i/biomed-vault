// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Researcher {
    id                     String          @id @default(uuid())
    name                   String
    institution            String
    email                  String          @unique
    username               String          @unique
    password               String
    remainingLoginAttempts Int             @default(3)
    tokens                 Token[]
    patients               Patient[]
    dataAccessLogs         DataAccessLog[]
}

model Patient {
    id             String          @id @default(uuid())
    name           String
    dateOfBirth    DateTime        @db.Date
    sex            Sex
    diagnosticInfo String // Diagnosis such as cancer/autism/osteoporosis
    treatmentInfo  String // Treatment information - how the patient was treated
    researcherId   String
    researcher     Researcher      @relation(fields: [researcherId], references: [id])
    genomicData    GenomicData[]
    phenotypes     PhenotypeData[]
    imagingData    ImagingData[]
    signalData     SignalData[]
    categories     CategoryType[]
}

model GenomicData {
    id            String          @id @default(uuid())
    name          String
    description   String
    dataType      GenomicDataType
    geneNames     String[]
    mutationTypes String[]
    impacts       String[]
    rawDataUrl    String // URL to the stored raw genomic data file
    quality       DataQuality     @default(UNKNOWN)
    categories    CategoryType[]
    patientId     String
    patient       Patient         @relation(fields: [patientId], references: [id])
}

model PhenotypeData {
    id          String         @id @default(uuid())
    name        String
    description String
    traits      String[]
    categories  CategoryType[]
    patientId   String
    patient     Patient        @relation(fields: [patientId], references: [id])
}

model ImagingData {
    id          String         @id @default(uuid())
    name        String
    description String
    imageType   ImagingType
    image       String // Store the actual image
    imageUrl    String // URL to the stored image file
    categories  CategoryType[]
    patientId   String
    patient     Patient        @relation(fields: [patientId], references: [id])
}

model SignalData {
    id          String         @id @default(uuid())
    name        String
    description String
    signalType  SignalType
    dataPoints  String // Store data points as JSON String (stringify)
    duration    Float // Duration of the signal in seconds
    sampleRate  Float // Sample rate in Hz
    categories  CategoryType[]
    patientId   String
    patient     Patient        @relation(fields: [patientId], references: [id])
}

model DataAccessLog {
    id           String     @id @default(uuid())
    event        String // e.g. logged in, register, accessed patient data
    outcome      String // successful (authorised) or failed (unauthorised)
    timestamp    DateTime   @default(now())
    researcherId String
    researcher   Researcher @relation(fields: [researcherId], references: [id])
}

model Token {
    id           String     @id @default(uuid())
    accessToken  String     @unique
    refreshToken String     @unique
    researcherId String
    researcher   Researcher @relation(fields: [researcherId], references: [id], onDelete: Cascade)
}

enum Sex {
    MALE
    FEMALE
    OTHER
}

enum GenomicDataType {
    WGS
    WES
    RNA
    TARGETTED
}

enum ImagingType {
    MRI
    CT
    XRAY
    ULTRASOUND
    PETSCAN
}

enum SignalType {
    ECG
    EEG
    EMG
    EOG
}

enum CategoryType {
    // Disease Classifications
    ONCOLOGICAL // Cancer and neoplastic diseases
    CARDIOVASCULAR // Heart and circulatory system diseases
    NEUROLOGICAL // Brain and nervous system disorders
    RESPIRATORY // Lung and breathing disorders
    GASTROINTESTINAL // Digestive system disorders
    ENDOCRINE // Hormone-related disorders
    IMMUNOLOGICAL // Immune system disorders
    MUSCULOSKELETAL // Bone and muscle disorders
    DERMATOLOGICAL // Skin conditions
    GENETIC_DISORDER // Inherited conditions
    INFECTIOUS_DISEASE // Bacterial, viral, fungal infections
    RARE_DISEASE // Rare genetic conditions

    // Clinical Aspects
    PRIMARY_DIAGNOSIS // Initial diagnosis
    SECONDARY_DIAGNOSIS // Complications or concurrent conditions
    ACUTE_CARE // Immediate/emergency care
    CHRONIC_CARE // Long-term management
    PALLIATIVE_CARE // End-of-life care
    PREVENTIVE_CARE // Disease prevention
    CLINICAL_TRIAL // Research studies

    // Treatment Categories
    CHEMOTHERAPY // Cancer drug treatment
    IMMUNOTHERAPY // Immune system treatment
    TARGETED_THERAPY // Specific molecular targeting
    HORMONE_THERAPY // Hormone-based treatment
    RADIATION_THERAPY // Radiation treatment
    SURGICAL // Surgical procedures
    COMBINATION_THERAPY // Multiple treatment types
    EXPERIMENTAL_THERAPY // Novel treatments

    // Demographic Scope
    PEDIATRIC // Children (0-18)
    ADULT // Adults (19-64)
    GERIATRIC // Elderly (65+)
    MATERNAL // Pregnancy-related
    FAMILIAL // Family-based studies

    // Anatomical Systems
    CENTRAL_NERVOUS // Brain, spinal cord
    PERIPHERAL_NERVOUS // Peripheral nerves
    CARDIAC // Heart specific
    VASCULAR // Blood vessels
    RESPIRATION // Nose, pharynx, larynx, trachea, lungs, bronchi
    DIGESTIVE // Mouth, esophagus, stomach, intestines, colon
    HEPATIC // Liver
    PANCREATIC // Pancreas
    RENAL // Kidneys
    URINARY // Bladder, urethra
    REPRODUCTIVE // Reproductive organs
    SKELETAL // Bones
    MUSCULAR // Muscles
    INTEGUMENTARY // Skin, hair, nails
    LYMPHATIC // Lymph nodes, vessels
    ENDOCRINE_THYROID // Thyroid
    ENDOCRINE_ADRENAL // Adrenal glands
    ENDOCRINE_PITUITARY // Pituitary gland
    OCULAR // Eyes
    AUDITORY // Ears
    ORAL // Mouth, teeth, gums
    JOINT // Joints and connective tissue
    HEMATOLOGIC // Blood and bone marrow
    IMMUNE // Immune system components
}

enum DataQuality {
    UNKNOWN
    LOW
    MEDIUM
    HIGH
}
