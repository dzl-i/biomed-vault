// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Researcher {
    id                     String          @id @default(uuid())
    name                   String
    institution            String
    email                  String          @unique
    username               String          @unique
    password               String
    remainingLoginAttempts Int             @default(3)
    tokens                 Token[]
    patients               Patient[]
    dataAccessLogs         DataAccessLog[]
}

model Patient {
    id             String          @id @default(uuid())
    name           String
    dateOfBirth    DateTime        @db.Date
    sex            Sex
    diagnosticInfo String // Diagnosis such as cancer/autism/osteoporosis
    treatmentInfo  String // Treatment information - how the patient was treated
    researcherId   String
    researcher     Researcher      @relation(fields: [researcherId], references: [id])
    genomicData    GenomicData[]
    phenotypes     PhenotypeData[]
    imagingData    ImagingData[]
    signalData     SignalData[]
    categories     CategoryType[]
}

model GenomicData {
    id            String          @id @default(uuid())
    name          String
    description   String
    dataType      GenomicDataType
    geneNames     String[]
    mutationTypes String[]
    impacts       String[]
    rawDataUrl    String // URL to the stored raw genomic data file
    quality       DataQuality     @default(UNKNOWN)
    categories    CategoryType[]
    patientId     String
    patient       Patient         @relation(fields: [patientId], references: [id])
}

model PhenotypeData {
    id          String         @id @default(uuid())
    name        String
    description String
    traits      String[]
    categories  CategoryType[]
    patientId   String
    patient     Patient        @relation(fields: [patientId], references: [id])
}

model ImagingData {
    id          String         @id @default(uuid())
    name        String
    description String
    imageType   ImagingType
    image       String // Store the actual image
    imageUrl    String // URL to the stored image file
    categories  CategoryType[]
    patientId   String
    patient     Patient        @relation(fields: [patientId], references: [id])
}

model SignalData {
    id          String         @id @default(uuid())
    name        String
    description String
    signalType  SignalType
    dataPoints  String // Store data points as JSON String (stringify)
    duration    Float // Duration of the signal in seconds
    sampleRate  Float // Sample rate in Hz
    categories  CategoryType[]
    patientId   String
    patient     Patient        @relation(fields: [patientId], references: [id])
}

model DataAccessLog {
    id           String     @id @default(uuid())
    event        String // e.g. logged in, register, accessed patient data
    outcome      String // successful (authorised) or failed (unauthorised)
    timestamp    DateTime   @default(now())
    researcherId String
    researcher   Researcher @relation(fields: [researcherId], references: [id])
}

model Token {
    id           String     @id @default(uuid())
    accessToken  String     @unique
    refreshToken String     @unique
    researcherId String
    researcher   Researcher @relation(fields: [researcherId], references: [id], onDelete: Cascade)
}

enum Sex {
    MALE
    FEMALE
    OTHER
}

enum GenomicDataType {
    WGS
    WES
    RNA
    TARGETTED
}

enum ImagingType {
    MRI
    CT
    XRAY
    ULTRASOUND
    PETSCAN
}

enum SignalType {
    ECG
    EEG
    EMG
    EOG
}

enum CategoryType {
    // Disease Categories
    DISEASE
    CANCER
    CARDIOVASCULAR
    NEUROLOGICAL
    GENETIC
    METABOLIC
    IMMUNOLOGICAL
    INFECTIOUS
    DEVELOPMENTAL

    // Clinical Categories
    DIAGNOSIS
    TREATMENT
    SCREENING
    PREVENTION
    EMERGENCY

    // Phenotype Categories
    SYMPTOM
    SYNDROME
    COMPLICATION
    SIDE_EFFECT

    // Genetic Categories
    MUTATION
    VARIANT
    POLYMORPHISM
    DELETION
    INSERTION
    FUSION
    AMPLIFICATION

    // Treatment Categories
    DRUG
    THERAPY
    SURGERY
    RADIATION
    IMMUNOTHERAPY
    GENE_THERAPY
    HORMONE_THERAPY

    // Demographic Categories
    PEDIATRIC
    ADULT
    GERIATRIC
    MATERNAL

    // Anatomical Categories
    BRAIN
    HEART
    LUNG
    LIVER
    KIDNEY
    BONE
    MUSCLE
    BLOOD
}

enum DataQuality {
    UNKNOWN
    LOW
    MEDIUM
    HIGH
}
